name: rustfmt and clippy check

on:
  pull_request:
    branches: [main, development]
    types: [opened, ready_for_review, reopened, synchronize]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  lint-fmt-clippy:
    timeout-minutes: 6 # 6 minutes is the maximum allowed for a cold run
    runs-on: ${{ vars.REPO_RUNNER_LABELS && fromJSON(vars.REPO_RUNNER_LABELS) || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install protoc 26.1
        uses: arduino/setup-protoc@v3
        with:
          version: 26.1
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Cargo registry, git deps & target
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-lint-fmt-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-lint-fmt-clippy-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.87.0
          override: true
          components: rustfmt, clippy

      - name: check code format (rustfmt)
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: check code license header (custom)
        uses: actions-rs/cargo@v1
        with:
          command: xtask
          args: check_lic

      - name: check clippy errors (without warnings)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
